# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  test:
    docker:
      - image: circleci/node:10.11-stretch-browsers
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}

      # ensure js files formatted correctly
      - run: yarn lint:js
      # ensure no typing errors in js
      - run: yarn lint:flow
      # ensure scss files formatted correctly
      - run: yarn lint:scss
      # run tests
      - run: yarn test

      # store junit result files (js tests, sass lint)
      - store_test_results:
          path: reports

  visual-test:
    docker:
      - image: circleci/node:10.11-stretch-browsers
    steps:
      # install microsoft fonts. (used in visual tests)
      - run: sudo apt update
      - run: sudo apt install -y -qq software-properties-common
      - run: sudo apt-add-repository contrib && sudo apt update
      - run: sudo apt install -y -qq ttf-mscorefonts-installer

      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}

      # build static storybook
      - run: yarn storybook:build
      # generate images from current state
      - run: yarn loki:build-current-static --configurationFilter ci
      # diff and generate report
      - run: .circleci/prepare_viz_tests_for_ci.sh
      - run: yarn test:visual
      # store the loki report for inspection
      - store_artifacts:
          path: .loki

  build:
    docker:
      - image: circleci/node:10.11-stretch
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "yarn.lock" }}
      # build the final distributable files
      - run: yarn dist:build
      # we'll persist the final distributable files for the publish step
      - persist_to_workspace:
          root: .
          path:
            - dist

  publish:
    docker:
      - image: circleci/node:10.11-stretch
    steps:
      - checkout
      - run: echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "yarn.lock" }}
      - attach_workspace:
          at: .
      # TODO: uncomment out when ready to publish
      # - run: yarn publish

workflows:
  version: 2
  dev-build:
    jobs:
      - test
      - visual-test
      - build
  release:
    jobs:
      - test
      - build:
          requires:
            - test
      - publish:
          requires:
            - build
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
